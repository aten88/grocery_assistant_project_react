# Generated by Django 4.2.2 on 2023-07-03 16:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранное',
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, verbose_name='Название ингредиента')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('measure_unit', models.CharField(max_length=100, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Ингредиент',
                'verbose_name_plural': 'Ингредиенты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IngredientInRecipie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Не может быть меньше 1!')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецепте',
                'verbose_name_plural': 'Ингредиенты в рецепте',
            },
        ),
        migrations.CreateModel(
            name='Recipie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название рецепта')),
                ('picture', models.ImageField(blank=True, upload_to='recipies/', verbose_name='Картинка блюда')),
                ('text', models.TextField(max_length=2000, verbose_name='Описание рецепта')),
                ('time_cooking', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Не может быть меньше 1!')])),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата публикации')),
            ],
            options={
                'verbose_name': ('Рецепт',),
                'verbose_name_plural': ('Рецепты',),
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Список покупок',
                'verbose_name_plural': 'Списки покупок',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название тега')),
                ('color', models.CharField(default='#49B64E', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(message='Введенное значение цвета, не является форматом HEX!', regex='^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$')], verbose_name='Цвет')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Уникальный слаг')),
            ],
            options={
                'verbose_name': ('Тег',),
                'verbose_name_plural': ('Теги',),
            },
        ),
        migrations.CreateModel(
            name='TagInRecepie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipie', models.ForeignKey(help_text='Выберите рецепт', on_delete=django.db.models.deletion.CASCADE, to='recipies.recipie', verbose_name='Рецепт')),
                ('tag', models.ForeignKey(help_text='Выберите рецепт', on_delete=django.db.models.deletion.CASCADE, to='recipies.tag', verbose_name='Теги')),
            ],
            options={
                'verbose_name': 'Тег рецепта',
                'verbose_name_plural': 'Теги рецепта',
            },
        ),
        migrations.AddConstraint(
            model_name='tag',
            constraint=models.UniqueConstraint(fields=('name', 'color', 'slug'), name='unique_tags'),
        ),
        migrations.AddField(
            model_name='shoppinglist',
            name='recipie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_recepie', to='recipies.recipie', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='shoppinglist',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shopping_user', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AddField(
            model_name='recipie',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipies', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта'),
        ),
        migrations.AddField(
            model_name='recipie',
            name='ingredients',
            field=models.ManyToManyField(related_name='recipies', through='recipies.IngredientInRecipie', to='recipies.ingredient', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='recipie',
            name='tags',
            field=models.ManyToManyField(related_name='recipies', to='recipies.tag', verbose_name='Тег'),
        ),
        migrations.AddField(
            model_name='ingredientinrecipie',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_in_recepie', to='recipies.ingredient', verbose_name='Ингредиент'),
        ),
        migrations.AddField(
            model_name='ingredientinrecipie',
            name='recipie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingrdients_list', to='recipies.recipie', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='follow',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow', to=settings.AUTH_USER_MODEL, verbose_name='Автор рецепта'),
        ),
        migrations.AddField(
            model_name='follow',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follower', to=settings.AUTH_USER_MODEL, verbose_name='Подписчик'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='recipie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='recipies.recipie', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Рецепт'),
        ),
        migrations.AddConstraint(
            model_name='taginrecepie',
            constraint=models.UniqueConstraint(fields=('tag', 'recipie'), name='unique_tag_recipie'),
        ),
        migrations.AddConstraint(
            model_name='shoppinglist',
            constraint=models.UniqueConstraint(fields=('user', 'recipie'), name='unique_shoppinglist'),
        ),
        migrations.AddConstraint(
            model_name='ingredientinrecipie',
            constraint=models.UniqueConstraint(fields=('recipie', 'ingredient'), name='unique_ingredients_in_recepies'),
        ),
        migrations.AddConstraint(
            model_name='follow',
            constraint=models.UniqueConstraint(fields=('user', 'author'), name='unique_follow'),
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipie'), name='unique_favorite'),
        ),
    ]
